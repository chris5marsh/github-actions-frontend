name: 'Visual Regression Testing'

description: 'Run visual regression testing'

inputs:
  aws-access-key-id:
    description: 'AWS access key id'
    required: true
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: true

runs:
  using: 'composite'

  steps:
    - name: Check if VRT enabled
      id: vrt_enabled
      shell: bash
      run: |
        vrtClientId=`echo $(jq -r '.plugins."reg-notify-github-plugin".clientId' <<< "$(cat regconfig.json)")`
        if [[ $vrtClientId != "" ]]; then
          echo "runVrt=true" >> $GITHUB_OUTPUT
          echo "VRT Enabled"
        else
          echo "VRT Not enabled"
        fi

    - uses: actions/github-script@v7
      id: get_pr_data
      with:
        script: |
          return (
            await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
          ).data[0];

    - name: Pull Request data
      shell: bash
      run: |
        echo '${{ fromJson(steps.get_pr_data.outputs.result).number }}'
        echo '${{ fromJson(steps.get_pr_data.outputs.result).title }}'

    - name: Install dependencies
      if: steps.vrt_enabled.outputs.runVrt && (github.event_name == 'pull_request' || !steps.get_pr_data.outputs.result.id)
      shell: bash
      run: yarn install --frozen-lockfile

    - name: Build storybook
      if: steps.vrt_enabled.outputs.runVrt && (github.event_name == 'pull_request' || !steps.get_pr_data.outputs.result.id)
      shell: bash
      run: yarn storybook:build

    - name: create the current snapshot
      if: steps.vrt_enabled.outputs.runVrt && (github.event_name == 'pull_request' || !steps.get_pr_data.outputs.result.id)
      shell: bash
      run: yarn storycap

    - name: Run Reg-suit (pull request)
      if: steps.vrt_enabled.outputs.runVrt && github.event_name == 'pull_request'
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        BASE_SHA: ${{ github.event.pull_request.base.sha }}
        HEAD_SHA: ${{ github.event.pull_request.head.sha }}
      run: yarn run reg-suit run

    - name: Run Reg-suit (push)
      if: steps.vrt_enabled.outputs.runVrt && github.event_name == 'push' && !steps.get_pr_data.outputs.result.id
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
      run: |
        node ${{ github.action_path }}/generate-reg-config.js "${{ github.workspace }}"
        yarn run reg-suit run --config=regconfig-push.json
